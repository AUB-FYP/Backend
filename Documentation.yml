swagger: "2.0"
info:
  description: API for managing user accounts and stock information
  version: "1.0.0"
  title: User Account and Stock Management API
host: localhost:5000
basePath: /user
tags:
  - name: "user"
    description: "Operations about user"
schemes:
  - "http"
paths:
  /authentication/:
    post:
      tags:
        - "authentication"
      summary: "Authenticate user"
      description: "Authenticates a user by verifying their username and password, and returns a token if successful."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Object containing the user's username and password."
          required: true
          schema:
            type: "object"
            required:
              - "user_name"
              - "password"
            properties:
              user_name:
                type: "string"
              password:
                type: "string"
      responses:
        "200":
          description: "Authentication successful, token returned"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
        "400":
          description: "Invalid request parameters"
        "401":
          description: "Unauthorized, incorrect password"
        "404":
          description: "User not found"

  /stock/:
    get:
      tags:
        - "stock"
      summary: "Get stock information by ticker and date"
      description: "Retrieve stock details including price and sentiment based on ticker and specific date."
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "ticker"
          type: "string"
          required: true
          description: "The stock ticker to fetch information for."
        - in: "query"
          name: "date"
          type: "string"
          required: true
          description: "The date of the stock data in YYYY-MM-DD format."
      responses:
        "200":
          description: "Stock information retrieved successfully"
        "400":
          description: "Invalid request parameters"
        "404":
          description: "Stock not found"
    post:
      tags:
        - "stock"
      summary: "Add historical stock data"
      description: "Add historical data for a stock from a specified date range."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Object containing the ticker for which the historical data will be fetched and added."
          required: true
          schema:
            type: "object"
            properties:
              ticker:
                type: "string"
      responses:
        "200":
          description: "Stock data added successfully"
        "400":
          description: "Invalid data input"

  /:
    post:
      tags:
        - "user"
      summary: "Create a new user"
      description: "Signup with a new username and password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Object containing the username and password"
          required: true
          schema:
            type: "object"
            required:
              - "user_name"
              - "password"
            properties:
              user_name:
                type: "string"
              password:
                type: "string"
      responses:
        "201":
          description: "User created"
        "400":
          description: "Invalid input"
        "409":
          description: "Username already exists"
    get:
      tags:
        - "user"
      summary: "Get user information"
      description: "Retrieve the user's information based on auth token"
      produces:
        - "application/json"
      responses:
        "200":
          description: "User found"
        "401":
          description: "Unauthorized or token expired"
        "404":
          description: "User not found"
  /{user_id}:
    post:
      tags:
        - "user"
      summary: "Modify user information"
      description: "Update stock tickers, shares owned and funds"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Object containing stock tickers and shares"
          required: true
          schema:
            type: "object"
            required:
              - "stock_tickers"
              - "shares_owned"
              - "money_owned"
            properties:
              stock_tickers:
                type: "array"
                items:
                  type: "string"
              shares_owned:
                type: "array"
                items:
                  type: "integer"
              money_owned:
                type: "number"
      responses:
        "200":
          description: "User information updated"
        "400":
          description: "Validation error"
        "404":
          description: "User not found"
  /{user_id}/stocks:
    post:
      tags:
        - "user"
      summary: "Add stock to user"
      description: "Add a new stock ticker to user's account"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Object containing the stock ticker"
          required: true
          schema:
            type: "object"
            required:
              - "stock_ticker"
            properties:
              stock_ticker:
                type: "string"
      responses:
        "200":
          description: "Stock added"
        "400":
          description: "Validation error"
        "404":
          description: "User not found"
        "500":
          description: "Server error"
    delete:
      tags:
        - "user"
      summary: "Delete stock from user"
      description: "Remove a stock ticker from user's account"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Object containing the stock ticker to be deleted"
          required: true
          schema:
            type: "object"
            required:
              - "stock_ticker"
            properties:
              stock_ticker:
                type: "string"
      responses:
        "200":
          description: "Stock deleted"
        "400":
          description: "Validation error"
        "404":
          description: "Stock not found"
        "500":
          description: "Server error"
    get:
      tags:
        - "user"
      summary: "Get stock information"
      description: "Fetch stock data for specified dates"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Object containing the stock ticker and date range"
          required: true
          schema:
            type: "object"
            required:
              - "stock_ticker"
              - "start_date"
              - "end_date"
            properties:
              stock_ticker:
                type: "string"
              start_date:
                type: "string"
              end_date:
                type: "string"
      responses:
        "200":
          description: "Stock data fetched"
        "400":
          description: "Validation error"
        "404":
          description: "User not found"
        "500":
          description: "Error fetching data"
  /{user_id}/model:
    get:
      tags:
        - "user"
      summary: "Train model for user"
      description: "Train a model based on user's stock data"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Model trained"
        "404":
          description: "User not found"
        "500":
          description: "Error fetching data"
  /{user_id}/infer:
    get:
      tags:
        - "user"
      summary: "Infer predictions for user"
      description: "Make predictions based on the latest user's stock data"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Predictions made"
        "404":
          description: "User not found"
        "500":
          description: "Error fetching data"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      user_name:
        type: "string"
      funds:
        type: "number"
      hashed_password:
        type: "string"
  UserStock:
    type: "object"
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
      stock:
        type: "string"
      shares:
        type: "integer"
  Stock:
    type: "object"
    properties:
      ticker:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      stock_price:
        type: "number"
      sentiment:
        type: "number"
      low:
        type: "number"
      high:
        type: "number"
      open:
        type: "number"
      close:
        type: "number"
      volume:
        type: "integer"
      adjcp:
        type: "number"
